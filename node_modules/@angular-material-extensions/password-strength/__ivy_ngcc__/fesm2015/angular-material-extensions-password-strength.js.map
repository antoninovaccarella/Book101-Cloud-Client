{"version":3,"file":"angular-material-extensions-password-strength.js","sources":["../../../../projects/angular-material-extensions/password-strength/src/lib/enum/colors.enum.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/enum/criteria.enum.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/validator/mat-password-strength-validator.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/validator/regexp.class.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength/mat-password-strength.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/animations/index.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength-info/mat-password-strength-info.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/mat-password-strength.module.ts","../../../../projects/angular-material-extensions/password-strength/src/public-api.ts","../../../../projects/angular-material-extensions/password-strength/src/angular-material-extensions-password-strength.ts"],"names":[],"mappings":"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","sourcesContent":["export enum Colors {\n  primary = 'primary',\n  accent = 'accent',\n  warn = 'warn'\n}\n","export enum Criteria {\n  at_least_eight_chars = 'minChar',\n  at_least_one_lower_case_char = 'lowerCase',\n  at_least_one_upper_case_char = 'upperCase',\n  at_least_one_digit_char = 'digit',\n  at_least_one_special_char = ' specialChar',\n  at_custom_chars = 'customChars'\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\ntype Type = 'text' | 'password' ;\n\n@Component({\n  selector: 'mat-pass-toggle-visibility',\n  templateUrl: './mat-pass-toggle-visibility.component.html',\n  styleUrls: ['./mat-pass-toggle-visibility.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MatPassToggleVisibilityComponent {\n\n  @Input()\n  isVisible: boolean;\n  @Input()\n  tabindex?: string;\n\n  _type: Type = 'text';\n\n  get type() {\n    return this.isVisible ? 'text' : 'password';\n  }\n\n}\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\n\nexport class MatPasswordStrengthValidator {\n\n  isUndefinedOrEmpty(control: AbstractControl): any | undefined {\n    if (!control || !control.value || control.value.length === 0) {\n      return undefined;\n    }\n  }\n\n  validate(criteria: string, regex: RegExp): ValidatorFn {\n    const validator = (control: AbstractControl): { [key: string]: any } => {\n      this.isUndefinedOrEmpty(control);\n      if (!regex.test(control.value)) {\n        const failed = {};\n        failed[criteria] = {\n          actualValue: control.value,\n          requiredPattern: regex\n        };\n        return failed;\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  confirm(password: string): ValidatorFn {\n    const validator = (control: AbstractControl): { [key: string]: any } => {\n      this.isUndefinedOrEmpty(control);\n      if (control.value !== password) {\n        return {\n          notConfirmed: {\n            password: password,\n            passwordConfirmation: control.value\n          }\n        }\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n}\n","export const RegExpValidator = {\n  'lowerCase': RegExp(/^(?=.*?[a-z])/),\n  'upperCase': RegExp(/^(?=.*?[A-Z])/),\n  'digit': RegExp(/^(?=.*?[0-9])/),\n  'specialChar': RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/),\n};\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ValidatorFn, Validators} from '@angular/forms';\nimport {Colors, Criteria} from '../../enum';\nimport {MatPasswordStrengthValidator} from '../../validator';\nimport {RegExpValidator} from '../../validator/regexp.class';\nimport {ThemePalette} from '@angular/material/core';\n\n\n@Component({\n  selector: 'mat-password-strength',\n  exportAs: 'matPasswordStrength',\n  templateUrl: './mat-password-strength.component.html',\n  styleUrls: ['./mat-password-strength.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatPasswordStrengthComponent),\n      multi: true\n    }\n  ]\n})\nexport class MatPasswordStrengthComponent implements OnInit, OnChanges, AfterContentChecked, ControlValueAccessor {\n\n  @Input() password: string;\n  @Input() externalError: boolean;\n\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n\n  @Input() min = 8;\n  @Input() max = 30;\n  @Input() customValidator: RegExp;\n\n  @Input() warnThreshold = 21;\n  @Input() accentThreshold = 81;\n\n  @Output()\n  onStrengthChanged: EventEmitter<number> = new EventEmitter();\n\n  criteriaMap = new Map<Criteria, RegExp>();\n\n  containAtLeastMinChars: boolean;\n  containAtLeastOneLowerCaseLetter: boolean;\n  containAtLeastOneUpperCaseLetter: boolean;\n  containAtLeastOneDigit: boolean;\n  containAtLeastOneSpecialChar: boolean;\n  containAtCustomChars: boolean;\n\n  // TO ACCESS VIA CONTENT CHILD\n  passwordFormControl: FormControl = new FormControl();\n  passwordConfirmationFormControl: FormControl = new FormControl();\n\n  validatorsArray: ValidatorFn[] = [];\n  Validators: ValidatorFn;\n  matPasswordStrengthValidator = new MatPasswordStrengthValidator();\n\n  private _strength = 0;\n\n  get strength(): number {\n    return this._strength ? this._strength : 0;\n  }\n\n  private _color: ThemePalette;\n\n  get color(): ThemePalette {\n\n    if (this._strength < this.warnThreshold) {\n      return Colors.warn;\n    } else if (this._strength < this.accentThreshold) {\n      return Colors.accent;\n    } else {\n      return Colors.primary;\n    }\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  ngOnInit(): void {\n    this.setRulesAndValidators();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ((changes.externalError && changes.externalError.firstChange) || changes.password.isFirstChange()) {\n      return;\n    } else if (changes.externalError && changes.externalError.currentValue) {\n      this._color = Colors.warn;\n      return;\n    } else if (changes.password.previousValue === changes.password.currentValue && !changes.password.firstChange) {\n      this.calculatePasswordStrength();\n    } else {\n      this.password && this.password.length > 0 ?\n        this.calculatePasswordStrength() : this.reset();\n    }\n  }\n\n  parseCustomValidatorsRegex(value: string | RegExp = this.customValidator) {\n    if (this.customValidator instanceof RegExp) {\n      return this.customValidator;\n    } else if (typeof this.customValidator === 'string') {\n      return RegExp(this.customValidator);\n    }\n  }\n\n  setRulesAndValidators(): void {\n    this.validatorsArray = [];\n    this.criteriaMap = new Map<Criteria, RegExp>();\n    this.passwordConfirmationFormControl\n      .setValidators(Validators.compose([\n        Validators.required, this.matPasswordStrengthValidator.confirm(this.password)\n      ]));\n    this.validatorsArray.push(Validators.required);\n    if (this.enableLengthRule) {\n      this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(`^.{${this.min},${this.max}}$`));\n      this.validatorsArray.push(Validators.minLength(this.min));\n      this.validatorsArray.push(Validators.maxLength(this.max));\n    }\n    if (this.enableLowerCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExpValidator.lowerCase);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.lowerCase));\n    }\n    if (this.enableUpperCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExpValidator.upperCase);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.upperCase));\n    }\n    if (this.enableDigitRule) {\n      this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExpValidator.digit);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.digit));\n    }\n    if (this.enableSpecialCharRule) {\n      this.criteriaMap.set(Criteria.at_least_one_special_char, RegExpValidator.specialChar);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.specialChar));\n    }\n    if (this.customValidator) {\n      this.criteriaMap.set(Criteria.at_custom_chars, this.parseCustomValidatorsRegex());\n      this.validatorsArray.push(Validators.pattern(this.parseCustomValidatorsRegex()));\n    }\n\n    this.criteriaMap.forEach((value: any, key: string) => {\n      this.validatorsArray.push(this.matPasswordStrengthValidator.validate(key, value));\n    });\n\n    this.passwordFormControl.setValidators(Validators.compose([...this.validatorsArray]));\n    this.Validators = Validators.compose([...this.validatorsArray]);\n\n  }\n\n  calculatePasswordStrength(): void {\n    const requirements: Array<boolean> = [];\n    const unit = 100 / this.criteriaMap.size;\n\n    // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\n    // console.log('unit = ', unit);\n\n    requirements.push(\n      this.enableLengthRule ? this._containAtLeastMinChars() : false,\n      this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false,\n      this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false,\n      this.enableDigitRule ? this._containAtLeastOneDigit() : false,\n      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false,\n      this.customValidator ? this._containCustomChars() : false\n    );\n\n    this._strength = requirements.filter(v => v).length * unit;\n    this.propagateChange(this.strength);\n    // console.log('length = ', this._strength / unit);\n    this.onStrengthChanged.emit(this.strength);\n    this.setRulesAndValidators();\n  }\n\n  reset() {\n    this._strength = 0;\n    this.containAtLeastMinChars =\n      this.containAtLeastOneLowerCaseLetter =\n        this.containAtLeastOneUpperCaseLetter =\n          this.containAtLeastOneDigit =\n            this.containAtCustomChars =\n              this.containAtLeastOneSpecialChar = false;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this._strength = obj;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  private _containAtLeastMinChars(): boolean {\n    this.containAtLeastMinChars = this.password.length >= this.min;\n    return this.containAtLeastMinChars;\n  }\n\n  private _containAtLeastOneLowerCaseLetter(): boolean {\n    this.containAtLeastOneLowerCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_lower_case_char)\n        .test(this.password);\n    return this.containAtLeastOneLowerCaseLetter;\n  }\n\n  private _containAtLeastOneUpperCaseLetter(): boolean {\n    this.containAtLeastOneUpperCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_upper_case_char)\n        .test(this.password);\n    return this.containAtLeastOneUpperCaseLetter;\n  }\n\n  private _containAtLeastOneDigit(): boolean {\n    this.containAtLeastOneDigit =\n      this.criteriaMap\n        .get(Criteria.at_least_one_digit_char)\n        .test(this.password);\n    return this.containAtLeastOneDigit;\n  }\n\n  private _containAtLeastOneSpecialChar(): boolean {\n    this.containAtLeastOneSpecialChar =\n      this.criteriaMap\n        .get(Criteria.at_least_one_special_char)\n        .test(this.password);\n    return this.containAtLeastOneSpecialChar;\n  }\n\n  private _containCustomChars(): boolean {\n    this.containAtCustomChars =\n      this.criteriaMap\n        .get(Criteria.at_custom_chars)\n        .test(this.password);\n    return this.containAtCustomChars;\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.password) {\n      this.calculatePasswordStrength();\n    }\n  }\n}\n","import {animate, animation, AnimationReferenceMetadata, keyframes, style} from '@angular/animations';\n\nexport function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {\n  const params = {timing: timing, delay: 0, rotateX, rotateY};\n\n  return animation(\n    [\n      style({'backface-visibility': 'visible'}),\n      animate(\n        '{{ timing }}s {{ delay }}s ease-in',\n        keyframes([\n          style({\n            opacity: 0,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n            offset: 0,\n          }),\n          style({\n            opacity: 1,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n            offset: 0.4,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n            offset: 0.6,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n            offset: 0.8,\n          }),\n          style({\n            transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n            offset: 1,\n          }),\n        ])\n      ),\n    ],\n    {params}\n  );\n}\n\nexport const flipInX = flipIn(1, 1, 0);\nexport const flipInY = flipIn(1, 0, 1);\n\nexport const shake = animation(\n  animate(\n    '{{ timing }}s {{ delay }}s',\n    keyframes([\n      style({transform: 'translate3d(0, 0, 0)', offset: 0}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.1}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.2}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.3}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.4}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.5}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.6}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.7}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.8}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.9}),\n      style({transform: 'translate3d(0, 0, 0)', offset: 1}),\n    ])\n  ),\n  {params: {timing: 1, delay: 0}}\n);\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatPasswordStrengthComponent} from '../mat-password-strength/mat-password-strength.component';\nimport {animate, animateChild, keyframes, query, stagger, style, transition, trigger, useAnimation} from '@angular/animations';\nimport {shake} from '../../animations/index';\n\n@Component({\n  selector: 'mat-password-strength-info',\n  exportAs: 'matPasswordStrengthInfo',\n  templateUrl: './mat-password-strength-info.component.html',\n  styleUrls: ['./mat-password-strength-info.component.scss'],\n  animations: [\n    // nice stagger effect when showing existing elements\n    trigger('list', [\n      transition(':enter', [\n        // child animation selector + stagger\n        query('@items',\n          stagger(300, animateChild())\n        )\n      ]),\n    ]),\n    trigger('items', [\n      // cubic-bezier for a tiny bouncing feel\n      transition(':enter', [\n        style({transform: 'scale(0.5)', opacity: 0}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(1)', opacity: 1}))\n      ]),\n      transition(':leave', [\n        style({transform: 'scale(1)', opacity: 1, height: '*'}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(0.5)', opacity: 0, height: '0px', margin: '0px'}))\n      ]),\n    ]),\n    trigger('positiveState', [\n      transition(':enter', [\n        style({'backface-visibility': 'visible'}),\n        animate(\n          '{{ timing }}s {{ delay }}s ease-in',\n          keyframes([\n            style({\n              opacity: 0,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n              offset: 0,\n            }),\n            style({\n              opacity: 1,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n              offset: 0.4,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n              offset: 0.6,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n              offset: 0.8,\n            }),\n            style({\n              transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n              offset: 1,\n            }),\n          ])\n        ),\n      ], {params: {timing: 1, delay: 0, rotateX: 1, rotateY: 0}}),\n    ]),\n    trigger('negativeState', [\n      transition(':enter', useAnimation(shake)),\n    ]),\n  ],\n})\nexport class MatPasswordStrengthInfoComponent implements OnInit {\n\n  @Input()\n  passwordComponent: MatPasswordStrengthComponent;\n\n  @Input()\n  enableScoreInfo = false;\n\n  @Input()\n  lowerCaseCriteriaMsg = 'contains at least one lower character';\n\n  @Input()\n  upperCaseCriteriaMsg = 'contains at least one upper character';\n\n  @Input()\n  digitsCriteriaMsg = 'contains at least one digit character';\n\n  @Input()\n  specialCharsCriteriaMsg = 'contains at least one special character';\n\n  @Input()\n  customCharsCriteriaMsg = 'contains at least one custom character';\n\n  @Input()\n  minCharsCriteriaMsg: string;\n\n  @Input()\n  matIconDone = 'done';\n\n  @Input()\n  matIconError = 'error';\n\n  ngOnInit(): void {\n    if (!this.minCharsCriteriaMsg) {\n      this.minCharsCriteriaMsg = `contains at least ${this.passwordComponent.min} characters`\n    }\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\nimport {MatPasswordStrengthInfoComponent} from './component/mat-password-strength-info/mat-password-strength-info.component';\nimport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\n\n\n// Export module's public API\nexport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\nexport {\n  MatPasswordStrengthInfoComponent\n} from './component/mat-password-strength-info/mat-password-strength-info.component';\nexport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\nexport {MatPasswordStrengthValidator} from './validator/mat-password-strength-validator';\n// validator\nexport {RegExpValidator} from './validator/regexp.class';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatIconModule,\n    MatRippleModule\n  ],\n  exports: [\n    MatPasswordStrengthComponent,\n    MatPasswordStrengthInfoComponent,\n    MatPassToggleVisibilityComponent\n  ],\n  declarations: [\n    MatPasswordStrengthComponent,\n    MatPasswordStrengthInfoComponent,\n    MatPassToggleVisibilityComponent\n  ],\n  entryComponents: [MatPassToggleVisibilityComponent]\n})\nexport class MatPasswordStrengthModule {\n  static forRoot(): ModuleWithProviders<MatPasswordStrengthModule> {\n    return {\n      ngModule: MatPasswordStrengthModule,\n      providers: []\n    };\n  }\n}\n","/*\n * Public API Surface of password-strength\n */\n\nexport * from './lib/enum';\nexport * from './lib/component';\nexport * from './lib/animations';\nexport * from './lib/validator';\nexport * from './lib/mat-password-strength.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {shake as ɵa} from './lib/animations/index';"]}