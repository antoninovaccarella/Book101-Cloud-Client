{"ast":null,"code":"/*\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from '../../../models/product';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-new-product',\n    templateUrl: './new-product.component.html',\n    styleUrls: ['./new-product.component.css']\n})\nexport class NewProductComponent {\n    product: Product = new Product(); // Object to store the product data\n    submissionStatus: string | null = null; // Variable to track the submission status\n\n    // Form Controls for validation\n    nameControl = new FormControl('', Validators.required);\n    stockControl = new FormControl('', Validators.required);\n    categoryControl = new FormControl('', Validators.required);\n    shortDetailsControl = new FormControl('', Validators.required);\n    descriptionControl = new FormControl('', Validators.required);\n    priceControl = new FormControl('', Validators.required);\n\n    // Image preview property\n    imagePreview: string | ArrayBuffer | null = null;\n\n    constructor(private http: HttpClient) {}\n  submitForm() {\n    this.submissionStatus = null; // Reset the submission status\n\n    const newProduct: Product = {\n      name: this.product.name,\n      stock: this.product.stock,\n      category: this.product.category,\n      shortDetails: this.product.shortDetails,\n      description: this.product.description,\n      picture: this.product.picture,\n      price: this.product.price\n    };\n\n    this.http.post<Product>('http://localhost:8080/api/product/add', newProduct)\n      .subscribe(\n        (response) => {\n          console.log('Product added successfully:', response);\n          this.submissionStatus = 'success'; // Set the submission status to success\n          this.resetForm(); // Clear the form upon successful submission\n        },\n        (error) => {\n          console.error('Error adding product:', error);\n          this.submissionStatus = 'error'; // Set the submission status to error\n        }\n      );\n  }\n\n}\nonImagePicked(event: Event): void {\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n        this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(file);\n}\n  resetForm() {\n    this.product = new Product(); // Clear the form fields\n  }\n}\n\n\n*/","map":null,"metadata":{},"sourceType":"script"}